{
  "apiInfo": {
    "serviceName": "Magic Remote",
    "serviceUri": "luna://com.webos.service.mrcu",
    "category": "device",
    "description": "매직 리모컨(Magic Remote)의 센서 이벤트와 상태 조회 기능을 제공합니다.",
    "version": "1.0",
    "lastUpdated": "2025-01-18",
    "status": "active",
    "webosVersion": "6.x"
  },
  "methods": [
    {
      "name": "getAPIVersion",
      "description": "MRCU API 버전을 조회합니다.",
      "emulatorSupport": true,
      "deprecated": false,
      "parameters": [],
      "returns": {
        "parameters": [
          {
            "name": "returnValue",
            "type": "boolean",
            "required": true,
            "description": "요청 성공 여부"
          },
          {
            "name": "version",
            "type": "string",
            "required": false,
            "description": "MRCU API 버전"
          },
          {
            "name": "errorCode",
            "type": "number",
            "required": false,
            "description": "오류 코드"
          },
          {
            "name": "errorText",
            "type": "string",
            "required": false,
            "description": "오류 메시지"
          }
        ]
      },
      "errors": [],
      "examples": [
        {
          "title": "API 버전 조회",
          "code": "var handle = webOS.service.request('luna://com.webos.service.mrcu', {\n  method: 'getAPIVersion',\n  parameters: {},\n  onSuccess: function (inResponse) {\n    console.log('Result:', JSON.stringify(inResponse));\n  },\n  onFailure: function (inError) {\n    console.log('[' + inError.errorCode + ']: ' + inError.errorText);\n  }\n});",
          "language": "javascript"
        }
      ]
    },
    {
      "name": "sensor2/getSensorEventData",
      "description": "매직 리모컨의 센서 이벤트 데이터를 구독합니다.",
      "emulatorSupport": true,
      "deprecated": false,
      "parameters": [],
      "returns": {
        "parameters": [
          {
            "name": "returnValue",
            "type": "boolean",
            "required": true,
            "description": "요청 성공 여부"
          },
          {
            "name": "eventData",
            "type": "object",
            "required": false,
            "description": "센서 이벤트 데이터"
          },
          {
            "name": "errorCode",
            "type": "number",
            "required": false,
            "description": "오류 코드"
          },
          {
            "name": "errorText",
            "type": "string",
            "required": false,
            "description": "오류 메시지"
          }
        ]
      },
      "errors": [],
      "examples": [
        {
          "title": "센서 이벤트 구독",
          "code": "var handle = webOS.service.request('luna://com.webos.service.mrcu', {\n  method: 'sensor2/getSensorEventData',\n  parameters: {},\n  onSuccess: function (inResponse) {\n    console.log('Sensor Data:', JSON.stringify(inResponse.eventData));\n  },\n  onFailure: function (inError) {\n    console.log('[' + inError.errorCode + ']: ' + inError.errorText);\n  }\n});",
          "language": "javascript"
        }
      ]
    },
    {
      "name": "sensor2/cancelSensorDataSubscribe",
      "description": "현재 구독 중인 센서 데이터 구독을 취소합니다.",
      "emulatorSupport": true,
      "deprecated": false,
      "parameters": [],
      "returns": {
        "parameters": [
          {
            "name": "returnValue",
            "type": "boolean",
            "required": true,
            "description": "요청 성공 여부"
          },
          {
            "name": "errorCode",
            "type": "number",
            "required": false,
            "description": "오류 코드"
          },
          {
            "name": "errorText",
            "type": "string",
            "required": false,
            "description": "오류 메시지"
          }
        ]
      },
      "errors": [],
      "examples": [
        {
          "title": "센서 구독 취소",
          "code": "var handle = webOS.service.request('luna://com.webos.service.mrcu', {\n  method: 'sensor2/cancelSensorDataSubscribe',\n  parameters: {},\n  onSuccess: function (inResponse) {\n    console.log('Subscription cancelled.');\n  },\n  onFailure: function (inError) {\n    console.log('[' + inError.errorCode + ']: ' + inError.errorText);\n  }\n});",
          "language": "javascript"
        }
      ]
    },
    {
      "name": "sensor2/getSensorState",
      "description": "리모컨의 모션 센서 현재 상태를 반환합니다.",
      "emulatorSupport": true,
      "deprecated": false,
      "parameters": [],
      "returns": {
        "parameters": [
          {
            "name": "returnValue",
            "type": "boolean",
            "required": true,
            "description": "요청 성공 여부"
          },
          {
            "name": "isAlive",
            "type": "boolean",
            "required": false,
            "description": "모션 센서 활성 상태"
          },
          {
            "name": "errorCode",
            "type": "number",
            "required": false,
            "description": "오류 코드"
          },
          {
            "name": "errorText",
            "type": "string",
            "required": false,
            "description": "오류 메시지"
          }
        ]
      },
      "errors": [],
      "examples": [
        {
          "title": "센서 상태 조회",
          "code": "var handle = webOS.service.request('luna://com.webos.service.mrcu', {\n  method: 'sensor2/getSensorState',\n  parameters: {},\n  onSuccess: function (inResponse) {\n    console.log('isAlive:', inResponse.isAlive);\n  },\n  onFailure: function (inError) {\n    console.log('[' + inError.errorCode + ']: ' + inError.errorText);\n  }\n});",
          "language": "javascript"
        }
      ]
    },
    {
      "name": "sensor2/getSensorInterval",
      "description": "모션 센서의 콜백 간격을 조회합니다.",
      "emulatorSupport": true,
      "deprecated": false,
      "parameters": [],
      "returns": {
        "parameters": [
          {
            "name": "returnValue",
            "type": "boolean",
            "required": true,
            "description": "요청 성공 여부"
          },
          {
            "name": "interval",
            "type": "number",
            "required": false,
            "description": "현재 콜백 간격(ms)"
          }
        ]
      },
      "errors": [],
      "examples": [
        {
          "title": "콜백 간격 조회",
          "code": "var handle = webOS.service.request('luna://com.webos.service.mrcu', {\n  method: 'sensor2/getSensorInterval',\n  parameters: {},\n  onSuccess: function (inResponse) {\n    console.log('Interval:', inResponse.interval);\n  }\n});",
          "language": "javascript"
        }
      ]
    },
    {
      "name": "sensor2/setSensorInterval",
      "description": "모션 센서의 콜백 간격을 설정합니다.",
      "emulatorSupport": true,
      "deprecated": false,
      "parameters": [
        {
          "name": "interval",
          "required": true,
          "type": "number",
          "description": "설정할 콜백 간격(ms)"
        }
      ],
      "returns": {
        "parameters": [
          {
            "name": "returnValue",
            "type": "boolean",
            "required": true,
            "description": "요청 성공 여부"
          }
        ]
      },
      "errors": [],
      "examples": [
        {
          "title": "콜백 간격 설정",
          "code": "var handle = webOS.service.request('luna://com.webos.service.mrcu', {\n  method: 'sensor2/setSensorInterval',\n  parameters: { interval: 100 },\n  onSuccess: function (inResponse) {\n    console.log('Interval set to 100ms');\n  },\n  onFailure: function (inError) {\n    console.log('[' + inError.errorCode + ']: ' + inError.errorText);\n  }\n});",
          "language": "javascript"
        }
      ]
    },
    {
      "name": "sensor2/resetQuaternion",
      "description": "매직 리모컨의 쿼터니언 센서를 재설정합니다.",
      "emulatorSupport": true,
      "deprecated": false,
      "parameters": [],
      "returns": {
        "parameters": [
          {
            "name": "returnValue",
            "type": "boolean",
            "required": true,
            "description": "요청 성공 여부"
          }
        ]
      },
      "errors": [],
      "examples": [
        {
          "title": "쿼터니언 리셋",
          "code": "var handle = webOS.service.request('luna://com.webos.service.mrcu', {\n  method: 'sensor2/resetQuaternion',\n  parameters: {},\n  onSuccess: function (inResponse) {\n    console.log('Quaternion sensor reset.');\n  },\n  onFailure: function (inError) {\n    console.log('[' + inError.errorCode + ']: ' + inError.errorText);\n  }\n});",
          "language": "javascript"
        }
      ]
    }
  ],
  "vscodeExtension": {
    "snippets": [
      {
        "prefix": "webos-mrcu-version",
        "body": [
          "webOS.service.request('luna://com.webos.service.mrcu', {",
          "    method: 'getAPIVersion',",
          "    parameters: {},",
          "    onSuccess: function (inResponse) {",
          "        console.log('MRCU version:', inResponse.version);",
          "    }",
          "});"
        ],
        "description": "MRCU API 버전 조회",
        "scope": "javascript"
      },
      {
        "prefix": "webos-mrcu-sensor-subscribe",
        "body": [
          "webOS.service.request('luna://com.webos.service.mrcu', {",
          "    method: 'sensor2/getSensorEventData',",
          "    parameters: {},",
          "    onSuccess: function (inResponse) {",
          "        console.log('Sensor event:', inResponse.eventData);",
          "    },",
          "    onFailure: function (inError) {",
          "        console.log('[' + inError.errorCode + ']: ' + inError.errorText);",
          "    }",
          "});"
        ],
        "description": "MRCU 센서 이벤트 구독",
        "scope": "javascript"
      }
    ],
    "completionItems": [
      {
        "label": "getAPIVersion",
        "kind": "Method",
        "documentation": "MRCU API 버전 조회",
        "insertText": "getAPIVersion",
        "detail": "Magic Remote"
      },
      {
        "label": "sensor2/getSensorEventData",
        "kind": "Method",
        "documentation": "센서 이벤트 구독",
        "insertText": "sensor2/getSensorEventData",
        "detail": "Magic Remote"
      },
      {
        "label": "sensor2/cancelSensorDataSubscribe",
        "kind": "Method",
        "documentation": "센서 구독 취소",
        "insertText": "sensor2/cancelSensorDataSubscribe",
        "detail": "Magic Remote"
      },
      {
        "label": "sensor2/getSensorState",
        "kind": "Method",
        "documentation": "센서 상태 조회",
        "insertText": "sensor2/getSensorState",
        "detail": "Magic Remote"
      },
      {
        "label": "sensor2/getSensorInterval",
        "kind": "Method",
        "documentation": "콜백 간격 조회",
        "insertText": "sensor2/getSensorInterval",
        "detail": "Magic Remote"
      },
      {
        "label": "sensor2/setSensorInterval",
        "kind": "Method",
        "documentation": "콜백 간격 설정",
        "insertText": "sensor2/setSensorInterval",
        "detail": "Magic Remote"
      },
      {
        "label": "sensor2/resetQuaternion",
        "kind": "Method",
        "documentation": "쿼터니언 리셋",
        "insertText": "sensor2/resetQuaternion",
        "detail": "Magic Remote"
      }
    ],
    "diagnostics": [
      {
        "pattern": "webOS\\.service\\.request\\('luna://com\\.webos\\.service\\.mrcu'",
        "checks": [
          {
            "field": "method",
            "validValues": [
              "getAPIVersion",
              "sensor2/getSensorEventData",
              "sensor2/cancelSensorDataSubscribe",
              "sensor2/getSensorState",
              "sensor2/getSensorInterval",
              "sensor2/setSensorInterval",
              "sensor2/resetQuaternion"
            ],
            "required": true,
            "type": "string"
          }
        ]
      }
    ]
  }
}